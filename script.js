document.addEventListener('DOMContentLoaded', () => {
    // --- –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã ---
    const lockscreenScene = document.getElementById('lockscreen-scene');
    const chatScene = document.getElementById('chat-scene');
    const universeScene = document.getElementById('universe-scene');

    const unlockSound = document.getElementById('unlock-sound');
    const notificationSound = document.getElementById('notification-sound');
    const magicSound = document.getElementById('magic-sound');
    const clickSound = document.getElementById('click-sound');

    const chatContainer = document.getElementById('chat-container');
    const chatReplyContainer = document.getElementById('chat-reply-container');
    const chatReplyBtn = document.getElementById('chat-reply-btn');

    const universeWrapper = document.querySelector('#universe-scene #universe-wrapper');
    const bigBangFlash = document.querySelector('#universe-scene #big-bang-flash');
    const starsContainer = document.querySelector('#universe-scene #stars-container');
    const celestialObjects = document.querySelectorAll('#universe-scene .celestial-object');
    const finalStar = document.getElementById('final-star');

    const transitionOverlay = document.getElementById('transition-overlay');
    const transitionTitle = document.getElementById('transition-title');
    const transitionText = document.getElementById('transition-text');

    // –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ü–µ–Ω—ã —É–ª—ã–±–∫–∏
    const planetSmileScene = document.getElementById('planet-smile-scene');
    const birdContainer = document.getElementById('bird-container');
    const glowingHeart = document.querySelector('#planet-smile-scene .glowing-heart');
    const quoteContainer = document.querySelector('#planet-smile-scene .quote-container');
    const quoteText = document.querySelector('#planet-smile-scene .quote-text');
    const smileSceneBackBtn = document.getElementById('smile-scene-back-btn');

    // --- –°–¶–ï–ù–ê–†–ò–ò –ò –î–ê–ù–ù–´–ï ---
    const chatScript = [{ type: 'her', text: '–° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è, –º–æ–µ —Å–æ–ª–Ω—ã—à–∫–æ! ‚ù§Ô∏è', time: '08:30' }, { type: 'her', text: '–ù–∞–¥–µ—é—Å—å, —Ç—ã –æ—Ç–ª–∏—á–Ω–æ –≤—ã—Å–ø–∞–ª–∞—Å—å –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Å–∞–º–æ–º—É –ª—É—á—à–µ–º—É –¥–Ω—é!', time: '08:31', needs_reply: true }, { type: 'my', text: '–ê–∞–∞, –ø—Ä–∏–≤–µ—Ç! –°–ø–∞—Å–∏–±–æ –æ–≥—Ä–æ–º–Ω–æ–µ! ü•∞ –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–Ω—É–ª–∞—Å—å', time: '08:32' }, { type: 'her', text: '–£ –º–µ–Ω—è –¥–ª—è —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –ø–æ–¥–∞—Ä–æ–∫. –ù–æ —á—Ç–æ–±—ã –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å, –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–≤–µ—Ä—à–∏—Ç—å –Ω–µ–±–æ–ª—å—à–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ... –ì–æ—Ç–æ–≤–∞?', time: '08:32', needs_reply: true }, { type: 'my', text: '–£—Ö —Ç—ã! –ì–æ—Ç–æ–≤–∞, –∏–Ω—Ç—Ä–∏–≥—É–µ—à—å)', time: '08:33' }, { type: 'her', text: '–Ø –ø—Ä–æ—à–ª–æ–π –Ω–æ—á—å—é –≤–∏–¥–µ–ª —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π —Å–æ–Ω –æ —Ç–µ–±–µ. –•–æ—á—É —Ç–µ–±–µ –µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç—å.', time: '08:33' }, { type: 'her', text: '–ü—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞... –∏ –Ω–∞–∂–º–∏ –Ω–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É üëá', time: '08:34', link: true }];
    const contentData = { 'object-smile': { title: '–ó–≤–µ–∑–¥–∞ —Ç–≤–æ–µ–π —É–ª—ã–±–∫–∏', text: '–¢–≤–æ—è —É–ª—ã–±–∫–∞ —Å–ø–æ—Å–æ–±–Ω–∞ –æ—Å–≤–µ—Ç–∏—Ç—å —Å–∞–º—ã–π —Ç–µ–º–Ω—ã–π —É–≥–æ–ª–æ–∫ –∫–æ—Å–º–æ—Å–∞. –û–Ω–∞ —Å–∏—è–µ—Ç —è—Ä—á–µ –ª—é–±–æ–π –∑–≤–µ–∑–¥—ã.' }, 'object-calm': { title: '–õ–µ–¥—è–Ω–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è', text: '–†—è–¥–æ–º —Å —Ç–æ–±–æ–π —è –Ω–∞—Ö–æ–∂—É —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ. –¢—ã –∫–∞–∫ —ç—Ç–∞ —Ç–∏—Ö–∞—è, –∫—Ä–∞—Å–∏–≤–∞—è –ø–ª–∞–Ω–µ—Ç–∞, –≥–¥–µ –Ω–µ—Ç –±—É—Ä—å –∏ —Ç—Ä–µ–≤–æ–≥.' }, 'object-humor': { title: '–ì–∞–∑–æ–≤—ã–π –≥–∏–≥–∞–Ω—Ç —é–º–æ—Ä–∞', text: '–¢–≤–æ–∏ —à—É—Ç–∫–∏ —Å–æ–∑–¥–∞—é—Ç –≤–æ–∫—Ä—É–≥ —Å–µ–±—è –º–æ—â–Ω—É—é –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –° —Ç–æ–±–æ–π –≤—Å–µ–≥–¥–∞ –≤–µ—Å–µ–ª–æ!' }, 'object-romance': { title: '–¢—É–º–∞–Ω–Ω–æ—Å—Ç—å –°–µ—Ä–¥—Ü–∞', text: '–≠—Ç–æ —Å–∞–º–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ, —á—Ç–æ —è –Ω–∞—à–µ–ª –≤ —Ç–≤–æ–µ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π. –û–±–ª–∞–∫–æ –Ω–µ–∂–Ω–æ—Å—Ç–∏, —Ç–µ–ø–ª–∞ –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Å–æ–∑–¥–∞–µ—à—å –≤–æ–∫—Ä—É–≥.' }, 'object-support': { title: '–î–≤–æ–π–Ω–∞—è –∑–≤–µ–∑–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏', text: '–ö–∞–∫ —ç—Ç–∏ –¥–≤–µ –∑–≤–µ–∑–¥—ã, –≤—Ä–∞—â–∞—é—â–∏–µ—Å—è –≤–º–µ—Å—Ç–µ, —Ç—ã –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å. –Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –º—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞.' }, 'final-star': { title: '–°–µ—Ä–¥—Ü–µ –í—Å–µ–ª–µ–Ω–Ω–æ–π', text: '–≠—Ç–æ –±—ã–ª –º–æ–π —Å–æ–Ω. –ù–æ –æ–Ω - –ª–∏—à—å –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–∞–∫–∞—è —Ç—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è, –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∞—è –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –ª—é–±–∏–º–∞—è. –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è!' } };
    const smileQuotes = ["–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî —ç—Ç–æ —Å–∞–º–æ–µ —è—Ä–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ –º–æ–µ–≥–æ –¥–Ω—è.", "–ö–æ–≥–¥–∞ —Ç—ã —É–ª—ã–±–∞–µ—à—å—Å—è, —è –≥–æ—Ç–æ–≤ –∑–∞–±—ã—Ç—å –æ–±–æ –≤—Å—ë–º –Ω–∞ —Å–≤–µ—Ç–µ.", "–í —Ç–≤–æ–µ–π —É–ª—ã–±–∫–µ –±–æ–ª—å—à–µ —Ç–µ–ø–ª–∞, —á–µ–º –≤ —Ç—ã—Å—è—á–µ —Å–æ–ª–Ω—Ü.", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–ª—ã–±–∞–π—Å—è —á–∞—â–µ. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –º–∏—Ä –ª—É—á—à–µ.", "–ö–∞–∂–µ—Ç—Å—è, —è –≤–ª—é–±–∏–ª—Å—è –≤ —Ç–≤–æ—é —É–ª—ã–±–∫—É –µ—â—ë –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –≤–ª—é–±–∏–ª—Å—è –≤ —Ç–µ–±—è.", "–£–ª—ã–±–∫–∞ ‚Äî —ç—Ç–æ —Ç–≤–æ–π –ø–æ—Ü–µ–ª—É–π, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–µ–Ω –∏–∑–¥–∞–ª–µ–∫–∞.", "–î–∞–∂–µ –µ—Å–ª–∏ –¥–µ–Ω—å –±—ã–ª —É–∂–∞—Å–Ω—ã–º, —Ç–≤–æ—è —É–ª—ã–±–∫–∞ –≤—Å—ë –∏—Å–ø—Ä–∞–≤–∏—Ç.", "–ü–æ–º–Ω—é —Ç–≤–æ—é —É–ª—ã–±–∫—É, –∫–æ–≥–¥–∞ —Ç—ã –ø—ã—Ç–∞–ª–∞—Å—å —Å–æ–≤—Ä–∞—Ç—å, —á—Ç–æ –Ω–µ –µ–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–µ—á–µ–Ω—å–∫—É.", "–≠—Ç–∞ —Ö–∏—Ç—Ä–∞—è —É–ª—ã–±–∫–∞, –∫–æ–≥–¥–∞ —Ç—ã –ø—Ä–∏–¥—É–º–∞–ª–∞ –æ—á–µ—Ä–µ–¥–Ω—É—é —à—É—Ç–∫—É...", "–£–ª—ã–±–∞–µ—à—å—Å—è —Ç–∞–∫, –±—É–¥—Ç–æ –∑–Ω–∞–µ—à—å –≥–ª–∞–≤–Ω—ã–π —Å–µ–∫—Ä–µ—Ç –í—Å–µ–ª–µ–Ω–Ω–æ–π. –ò, –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–∫ –∏ –µ—Å—Ç—å.", "–¢–≤–æ—è —É–ª—ã–±–∫–∞ –ø–æ—Å–ª–µ —Ñ—Ä–∞–∑—ã '–û–π, —è —Å–ª—É—á–∞–π–Ω–æ' –±–µ—Å—Ü–µ–Ω–Ω–∞.", "–í —Ç–≤–æ–µ–π —É–ª—ã–±–∫–µ —è –≤–∏–∂—É –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–¥–æ—Å—Ç—å, –∞ —Ü–µ–ª—É—é –∏—Å—Ç–æ—Ä–∏—é.", "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–µ–ª–∏—à—å—Å—è —Å–æ –º–Ω–æ–π —Å–≤–æ–µ–π —É–ª—ã–±–∫–æ–π. –≠—Ç–æ —Å–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π –ø–æ–¥–∞—Ä–æ–∫.", "–Ø –ø–æ–Ω—è–ª, —á—Ç–æ –¥–æ–º–∞, –∫–æ–≥–¥–∞ –≤–ø–µ—Ä–≤—ã–µ —É–≤–∏–¥–µ–ª —Ç–≤–æ—é –∏—Å–∫—Ä–µ–Ω–Ω—é—é —É–ª—ã–±–∫—É.", "–ö–∞–∂–¥–∞—è —Ç–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî —ç—Ç–æ –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–±–µ–¥–∞ –Ω–∞–¥ —Å–µ—Ä–æ—Å—Ç—å—é –º–∏—Ä–∞."];

    // –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–æ–≤—ã–π SVG –∫–æ–¥ –ø—Ç–∏—Ü—ã
    const svgBirdHTML = `
        <svg version="1.0" xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24.000000 24.000000"
            preserveAspectRatio="xMidYMid meet">
            <g transform="translate(0.000000,24.000000) scale(0.100000,-0.100000)" stroke="none">
                <path d="M52 168 c-7 -7 -12 -28 -12 -48 0 -24 -6 -39 -20 -48 -11 -7 -20 -16 -20 -20 0 -11 111 2 137 16 12 7 37 12 57 12 19 0 37 4 40 9 9 13 -36 29 -70 24 -27 -4 -36 0 -59 31 -30 39 -35 42 -53 24z"/>
                <path d="M132 168 c-8 -8 -9 -15 -1 -25 17 -20 29 -15 29 12 0 27 -9 32 -28 13z"/>
            </g>
        </svg>
    `;

    // --- –û–ë–©–ê–Ø –õ–û–ì–ò–ö–ê ---
    function switchScene(hideScene, showScene) { hideScene.style.opacity = '0'; if (hideScene.id === 'universe-scene') { universeWrapper.classList.remove('visible'); } setTimeout(() => { hideScene.classList.remove('visible'); showScene.classList.add('visible'); if (showScene.id === 'chat-scene') startChatScene(); if (showScene.id === 'universe-scene') startUniverseScene(); }, 500); }
    lockscreenScene.addEventListener('click', () => { unlockSound.play(); switchScene(lockscreenScene, chatScene); });

    // --- –ê–ö–¢ II: –ß–ê–¢ ---
    let currentMessageIndex = 0;
    function startChatScene() { playNextMessage(); }
    function playNextMessage() { if (currentMessageIndex >= chatScript.length) return; const messageData = chatScript[currentMessageIndex]; appendMessage(messageData); if (messageData.needs_reply) { setTimeout(() => chatReplyContainer.classList.add('visible'), 500); return; } if (messageData.type === 'my' || messageData.link) return; currentMessageIndex++; setTimeout(playNextMessage, 1500); }
    chatReplyBtn.addEventListener('click', () => { chatReplyContainer.classList.remove('visible'); currentMessageIndex++; playNextMessage(); setTimeout(() => { currentMessageIndex++; playNextMessage(); }, 1000); });
    function appendMessage(messageData) { const messageElement = document.createElement('div'); messageElement.classList.add('chat-message', messageData.type === 'my' ? 'my-message' : 'her-message'); const textP = document.createElement('p'); textP.classList.add('message-text'); textP.innerHTML = messageData.text; messageElement.appendChild(textP); if (messageData.link) { const linkBtn = document.createElement('a'); linkBtn.classList.add('chat-link-btn'); linkBtn.textContent = "–ü–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ —Å–æ–Ω..."; messageElement.appendChild(linkBtn); linkBtn.addEventListener('click', () => { magicSound.play(); switchScene(chatScene, universeScene); }); } const timeSpan = document.createElement('span'); timeSpan.classList.add('message-time'); timeSpan.textContent = messageData.time; messageElement.appendChild(timeSpan); chatContainer.appendChild(messageElement); chatContainer.scrollTop = chatContainer.scrollHeight; if (messageData.type === 'her') { notificationSound.play(); } }

    // --- –ê–ö–¢ III: –í–°–ï–õ–ï–ù–ù–ê–Ø ---
    function startUniverseScene() { universeWrapper.classList.add('visible'); if (!starsContainer.hasChildNodes()) { createBackgroundElements(); } bigBangFlash.style.display = 'block'; bigBangFlash.classList.add('explode'); setTimeout(() => { celestialObjects.forEach((obj, index) => { if (obj.id !== 'final-star') { setTimeout(() => { obj.classList.add('visible'); }, index * 250 + 500); } }); }, 300); }
    function createBackgroundElements() { const starsCount = 200, cometsCount = 7; for (let i = 0; i < starsCount; i++) { const star = document.createElement('div'); star.classList.add('static-star'); star.style.position = 'absolute'; star.style.width = `${Math.random() * 2 + 0.5}px`; star.style.height = star.style.width; star.style.borderRadius = '50%'; star.style.background = '#fff'; star.style.top = `${Math.random() * 100}%`; star.style.left = `${Math.random() * 100}%`; star.style.animationDelay = `${Math.random() * 4}s`; starsContainer.appendChild(star); } for (let i = 0; i < cometsCount; i++) { const comet = document.createElement('div'); comet.classList.add('comet'); comet.style.top = `${Math.random() * 100}vh`; comet.style.left = `${Math.random() * 100}vw`; comet.style.animationDelay = `${Math.random() * 10}s`; comet.style.animationDuration = `${5 + Math.random() * 5}s`; starsContainer.appendChild(comet); } }
    bigBangFlash.addEventListener('animationend', () => { bigBangFlash.style.display = 'none'; bigBangFlash.classList.remove('explode'); });

    // --- –õ–û–ì–ò–ö–ê –ü–ï–†–ï–•–û–î–û–í –ò –ü–õ–ê–ù–ï–¢ ---
    let currentPlanetObject = null;
    const visitedObjects = new Set();
    const delay = ms => new Promise(res => setTimeout(res, ms));
    async function transitionToPlanet(planetElement) { if (!planetElement) return; currentPlanetObject = planetElement; const planetId = planetElement.id; let targetScene; if (planetId === 'object-smile') { targetScene = planetSmileScene; } else { alert(`–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ –¥–ª—è "${contentData[planetId].title}" –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!`); currentPlanetObject = null; return; } universeScene.classList.add('fading-out'); planetElement.classList.add('zooming'); await delay(1000); transitionTitle.textContent = contentData[planetId].title; transitionOverlay.classList.add('visible'); await delay(2000); universeScene.classList.remove('visible'); targetScene.classList.add('visible'); transitionOverlay.classList.remove('visible'); planetElement.classList.remove('zooming'); universeScene.classList.remove('fading-out'); if (planetId === 'object-smile') startSmilePlanetLogic(); }
    async function transitionBackFromPlanet() { const planetId = currentPlanetObject.id; let currentPlanetScene; if (planetId === 'object-smile') currentPlanetScene = planetSmileScene; transitionTitle.textContent = "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤–æ –≤—Å–µ–ª–µ–Ω–Ω—É—é..."; transitionText.textContent = ""; transitionOverlay.classList.add('visible'); await delay(1500); currentPlanetScene.classList.remove('visible'); universeScene.classList.add('visible'); if (!currentPlanetObject.classList.contains('visited')) { currentPlanetObject.classList.add('visited'); visitedObjects.add(planetId); if (visitedObjects.size === celestialObjects.length - 1) { setTimeout(() => finalStar.classList.add('visible'), 1500); } } transitionOverlay.classList.remove('visible'); if (planetId === 'object-smile') resetSmilePlanet(); currentPlanetObject = null; }

    // --- –õ–û–ì–ò–ö–ê –ü–õ–ê–ù–ï–¢–´ –£–õ–´–ë–ö–ò ---
    let firstClickOnHeart = true;
    let birdIntervalId = null;
    function spawnBirds() { const flockSize = Math.floor(Math.random() * 4) + 1; const flightPath = `fly-path-${Math.floor(Math.random() * 3) + 1}`; const baseDuration = Math.random() * 5 + 12; const startTop = Math.random() * 30 + 10; for (let i = 0; i < flockSize; i++) { const bird = document.createElement('div'); bird.className = 'bird'; bird.innerHTML = svgBirdHTML; bird.style.top = `${startTop + (Math.random() * 6 - 3)}%`; bird.style.transform = `scale(${Math.random() * 0.4 + 0.8})`; bird.style.animationName = flightPath; bird.style.animationDuration = `${baseDuration + (Math.random() * 2 - 1)}s`; bird.style.animationDelay = `${i * 0.2}s`; birdContainer.appendChild(bird); bird.addEventListener('animationend', () => bird.remove()); } birdIntervalId = setTimeout(spawnBirds, Math.random() * 6000 + 4000); }
    function startSmilePlanetLogic() { firstClickOnHeart = true; spawnBirds(); glowingHeart.onclick = () => { glowingHeart.classList.add('flash'); glowingHeart.onanimationend = () => glowingHeart.classList.remove('flash'); quoteText.classList.add('fading-out'); setTimeout(() => { const randomIndex = Math.floor(Math.random() * smileQuotes.length); quoteText.textContent = smileQuotes[randomIndex]; quoteText.classList.remove('fading-out'); }, 300); if (firstClickOnHeart) { quoteContainer.classList.add('visible'); setTimeout(() => { smileSceneBackBtn.classList.add('visible'); }, 500); firstClickOnHeart = false; } }; }
    function resetSmilePlanet() { quoteContainer.classList.remove('visible'); smileSceneBackBtn.classList.remove('visible'); quoteText.textContent = ""; firstClickOnHeart = true; clearTimeout(birdIntervalId); birdContainer.innerHTML = ''; }
    smileSceneBackBtn.addEventListener('click', transitionBackFromPlanet);

    // --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–õ–ò–ö–û–í –ù–ê –û–ë–™–ï–ö–¢–´ –í–°–ï–õ–ï–ù–ù–û–ô ---
    celestialObjects.forEach(obj => { if (obj.id === 'final-star') return; obj.addEventListener('click', () => { if (obj.classList.contains('visited') || currentPlanetObject) return; if (clickSound) { clickSound.currentTime = 0; clickSound.play(); } transitionToPlanet(obj); }); });
    finalStar.addEventListener('click', () => { if (clickSound) { clickSound.currentTime = 0; clickSound.play(); } const finalData = contentData['final-star']; transitionTitle.textContent = finalData.title; transitionText.textContent = finalData.text; transitionOverlay.classList.add('visible'); transitionOverlay.onclick = () => { transitionOverlay.classList.remove('visible'); transitionText.textContent = ""; transitionOverlay.onclick = null; }; });

    // --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
    lockscreenScene.classList.add('visible');
});